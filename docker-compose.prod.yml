version: "3.0"

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - 3000:3000
    environment: 
      - NODE_ENV=production
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    depends_on: 
      - api_server
    networks:
      - highfive
  
  api_server:
    container_name: api_server
    build:
      context: .
      dockerfile: ./backend/api_server/Dockerfile
    ports:
      - 8000:8000
    volumes:
      - ./backend/api_server:/usr/src/app
    networks:
      - highfive
    restart: always

  nginx:
    container_name: nginx
    build: 
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - 80:80
      - 433:433
    volumes:
      - ./frontend/build:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - api_server
      - web
    networks:
      - highfive
    restart: on-failure

  certbot:
    image: certbot/certbot
    container_name: "certbot"
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on: 
      - nginx
    restart: unless-stopped

networks: 
  highfive:
    driver: bridge
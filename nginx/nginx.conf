# user  nginx;

# worker_processes  1;

# error_log  /var/log/nginx/error.log warn;

# pid        /var/run/nginx.pid;

# events {
#     worker_connections  1024;
# }

# http{
#   upstream docker_front{
#     server react:3000;
#   }

#   upstream docker_back{
#     server flask:5000;
#   }

#   server {
#     listen 80;
#     server_name localhost;

#     location / {
#       proxy_pass http://docker_front;

#       proxy_redirect off;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_set_header Host $http_host;
#     }
#   }

#   server {
#     listen 8080;
#     server_name localhost;

#     # /static 요청 이외의 요청은 모두 gunicorn이 처리(동적요청)
#     location / {
#       proxy_pass http://docker_back;

#       proxy_redirect off;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_set_header Host $http_host;
#     }
#   }
# }

http {
  upstream api {
    server flask:5000;
  }

  server {
    listen 80;
    server_name localhost;
    charset utf-8;

    location /api/ { 
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://api;
    }

    location / {
      root /var/www/frontend;
    }
    
  }
}